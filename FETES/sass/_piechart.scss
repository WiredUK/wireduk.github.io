@import "compass/css3";

// Variables - change to edit the colors, size, width and time
$incomplete: $lightblue;
$complete: $darkblue;
$size: 150px; 
$borderwidth: 30px;
$time: 2s;
 
// Do not edit this
$multiplier: 1;
$by: 100/$multiplier;

.box-border-padding{
    border: 1px solid #a9a9a9;
    margin-bottom: 20px;
    .box-border{
        border: 15px solid $white;
        text-align: center;
        padding:15px;
        background: $white;
        background-image: url(../img/stripes.png);
        background-repeat: repeat;
    }
}

.chart {
  position: relative;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: 0 auto;
  width: $size;
  height: $size;
  font-size: 24px;
  color: $darkblue;
  border-radius: 50%;
  box-shadow: inset 0 0 0px $borderwidth $incomplete;
  overflow: hidden;
  font-family: kaleko;
  margin-bottom: 20px;
  
  &:before {
    content: attr(data-percentage)'%';
    display: block;
    width: $size;
    height: $size;
    line-height: $size;
    text-align: center;
    border-radius: 50%;
  }
}

@keyframes tens {
  0% { transform: translateY(0px); }
  100% { transform: translateY(-160px); }
}

@keyframes ones {
  0% { transform: translateY(0px); }
  100% { transform: translateY(-160px); }
}

.completed {
  position: absolute;
  top: 0;
  left: 0;
  
  &:before,
  &:after {
    content: '';
    position: absolute;
    width: $size;
    height: $size;
    box-shadow: inset 0 0 0px $borderwidth $complete;
    border-radius: 50%;
        top: 0;
    left: 0;
    right: 0;
    margin: auto;
  }
  
  &:before { clip: rect(0 $size $size $size/2); }
  &:after { clip: rect(0 $size/2 $size 0); }
}

@for $i from 0 through $by {
   $value: $i * $multiplier;
  
  [data-percentage="#{$value}"] .completed {
    @if $value <= 50 {
      clip: rect(0 $size $size $size/2);
    } @else {
      clip: rect(0 $size $size 0px);
    }
    
    &.active {
      @if $value <= 50 {
        &:before { 
          transform: rotate(-180 + ($value/100 * 360deg));
          animation: first-#{$value} $time 1 linear; 
        }
      } @else {
        animation: mask-#{$value} $time linear;
        &:before { 
          transform: rotate(0deg);
          animation: first-#{$value} $time 1 linear; 
        }
        &:after { 
          transform: rotate(-360 + ($value/100 * 360deg));
          animation: second-#{$value} $time 1 linear; 
        }
      }
    }
  }

  
  // Animation for chart
  @keyframes mask-#{$value} {
    0%, 50% { clip: rect(0 $size $size $size / 2); }
    50.01%, 100% { clip: rect(0 $size $size 0px); }
  }
  @if $value <= 50 {
    @keyframes first-#{$value} {
      0% { transform: rotate(-180deg); }
      50%, 100% { transform: rotate(-180 + ($value/100 * 360deg)); }
    }
  } @else {
    @keyframes first-#{$value} {
      0% { transform: rotate(-180deg); }
      50%, 100% { transform: rotate(0deg); }
    }
    
    @keyframes second-#{$value} {
      0%, 50% { transform: rotate(0deg); }
      50.01% { transform: rotate(-180deg); } 
      100% { transform: rotate(-360 + ($value/100 * 360deg)); }
    }
  }
}